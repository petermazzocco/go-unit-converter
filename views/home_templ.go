// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.857
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Home() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"flex flex-col min-h-screen justify-center items-center\"><div class=\"bg-white rounded-md shadow-lg p-4 w-[300px]\"><div class=\"flex flex-row items-center gap-4 justify-center mb-4\"><button hx-get=\"/length\" hx-target=\"#forms-container\" hx-swap=\"innerHTML\" class=\"px-2 py-1 rounded tab-button active-tab hover:underline hover:underline-offset-2\">Length</button> <button hx-get=\"/weight\" hx-target=\"#forms-container\" hx-swap=\"innerHTML\" class=\"px-2 py-1 rounded tab-button hover:underline hover:underline-offset-2\">Weight</button> <button hx-get=\"/temperature\" hx-target=\"#forms-container\" hx-swap=\"innerHTML\" class=\"px-2 py-1 rounded tab-button hover:underline hover:underline-offset-2\">Temperature</button></div><div id=\"forms-container\"><!-- Initial form that will be shown by default --><form hx-post=\"/convert\" hx-swap=\"innerHTML\" hx-target=\"#result\" class=\"flex flex-col gap-4\" id=\"length-form\"><div class=\"flex flex-col gap-2\"><label for=\"amount\">Amount:</label> <input type=\"number\" id=\"amount\" name=\"amount\" placeholder=\"0.00\" class=\"border border-black/50 rounded py-0.5 px-1.5\" required></div><div class=\"flex flex-col gap-2\"><label for=\"fromUnit\">From Length Unit:</label> <select id=\"fromUnit\" name=\"fromUnit\" class=\"border border-black/50 rounded py-0.5 px-1.5\" required><option value=\"meter\">Meter</option> <option value=\"kilometer\">Kilometer</option> <option value=\"centimeter\">Centimeter</option> <option value=\"millimeter\">Millimeter</option></select></div><div class=\"flex flex-col gap-2\"><label for=\"toUnit\">To Length Unit:</label> <select id=\"toUnit\" name=\"toUnit\" class=\"border border-black/50 rounded py-0.5 px-1.5\" required><option value=\"meter\">Meter</option> <option value=\"kilometer\">Kilometer</option> <option value=\"centimeter\">Centimeter</option> <option value=\"millimeter\">Millimeter</option></select></div><button type=\"submit\" class=\"bg-black text-white rounded-md px-4 py-1.5\">Convert</button></form></div><div id=\"result\" class=\"mt-4 text-center\"></div></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Base().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func LengthTab() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<form hx-post=\"/convert\" hx-swap=\"innerHTML\" hx-target=\"#result\" class=\"flex flex-col gap-4\" id=\"length-form\"><div class=\"flex flex-col gap-2\"><label for=\"amount\">Amount:</label> <input type=\"number\" id=\"amount\" name=\"amount\" placeholder=\"0.00\" class=\"border border-black/50 rounded py-0.5 px-1.5\" required></div><div class=\"flex flex-col gap-2\"><label for=\"fromUnit\">From Length Unit:</label> <select id=\"fromUnit\" name=\"fromUnit\" class=\"border border-black/50 rounded py-0.5 px-1.5\" required><option value=\"meter\">Meter</option> <option value=\"kilometer\">Kilometer</option> <option value=\"centimeter\">Centimeter</option> <option value=\"millimeter\">Millimeter</option></select></div><div class=\"flex flex-col gap-2\"><label for=\"toUnit\">To Length Unit:</label> <select id=\"toUnit\" name=\"toUnit\" class=\"border border-black/50 rounded py-0.5 px-1.5\" required><option value=\"meter\">Meter</option> <option value=\"kilometer\">Kilometer</option> <option value=\"centimeter\">Centimeter</option> <option value=\"millimeter\">Millimeter</option></select></div><button type=\"submit\" class=\"bg-black text-white rounded-md px-4 py-1.5\">Convert</button></form>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func WeightTab() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var4 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var4 == nil {
			templ_7745c5c3_Var4 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<form hx-post=\"/convert\" hx-swap=\"innerHTML\" hx-target=\"#result\" class=\"flex flex-col gap-4\" id=\"weight-form\"><div class=\"flex flex-col gap-2\"><label for=\"amount\">Amount:</label> <input type=\"number\" id=\"amount\" name=\"amount\" placeholder=\"0.00\" class=\"border border-black/50 rounded py-0.5 px-1.5\" required></div><div class=\"flex flex-col gap-2\"><label for=\"fromUnit\">From Weight Unit:</label> <select id=\"fromUnit\" name=\"fromUnit\" class=\"border border-black/50 rounded py-0.5 px-1.5\" required><option value=\"kilogram\">Kilogram</option> <option value=\"gram\">Gram</option> <option value=\"milligram\">Milligram</option> <option value=\"pound\">Pound</option> <option value=\"ounce\">Ounce</option></select></div><div class=\"flex flex-col gap-2\"><label for=\"toUnit\">To Weight Unit:</label> <select id=\"toUnit\" name=\"toUnit\" class=\"border border-black/50 rounded py-0.5 px-1.5\" required><option value=\"kilogram\">Kilogram</option> <option value=\"gram\">Gram</option> <option value=\"milligram\">Milligram</option> <option value=\"pound\">Pound</option> <option value=\"ounce\">Ounce</option></select></div><button type=\"submit\" class=\"bg-black text-white rounded-md px-4 py-1.5\">Convert</button></form>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func TemperatureTab() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var5 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var5 == nil {
			templ_7745c5c3_Var5 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<form hx-post=\"/convert\" hx-swap=\"innerHTML\" hx-target=\"#result\" class=\"flex flex-col gap-4\" id=\"temperature-form\"><div class=\"flex flex-col gap-2\"><label for=\"amount\">Amount:</label> <input type=\"number\" id=\"amount\" name=\"amount\" placeholder=\"0.00\" class=\"border border-black/50 rounded py-0.5 px-1.5\" required></div><div class=\"flex flex-col gap-2\"><label for=\"fromUnit\">From Temp Unit:</label> <select id=\"fromUnit\" name=\"fromUnit\" class=\"border border-black/50 rounded py-0.5 px-1.5\" required><option value=\"celsius\">Celsius</option> <option value=\"fahrenheit\">Fahrenheit</option> <option value=\"kelvin\">Kelvin</option></select></div><div class=\"flex flex-col gap-2\"><label for=\"toUnit\">To Temp Unit:</label> <select id=\"toUnit\" name=\"toUnit\" class=\"border border-black/50 rounded py-0.5 px-1.5\" required><option value=\"celsius\">Celsius</option> <option value=\"fahrenheit\">Fahrenheit</option> <option value=\"kelvin\">Kelvin</option></select></div><button type=\"submit\" class=\"bg-black text-white rounded-md px-4 py-1.5\">Convert</button></form>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
